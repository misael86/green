name: Deploy PR Storybooks

on:
  workflow_run:
    workflows: ['Build PR Storybooks']
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Get token
        id: get_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GREEN_BOT_APP_ID }}
          private-key: ${{ secrets.GREEN_BOT_PRIVATE_KEY }}

      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifact.id,
                archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));

      - run: unzip pr.zip

      - name: Get PR number
        id: pr_number
        uses: actions/github-script@v3
        with:
          script: |
            var fs = require('fs');
            return 'pr-' + Number(fs.readFileSync('./PR_NUMBER'));

      - name: Deploy built storybooks to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          token: ${{ steps.get_token.outputs.token }}
          branch: gh-pages # The branch the action should deploy to.
          folder: . # The folder the action should deploy.
          target-folder: ${{ steps.pr_number.outputs.result }} # The folder the action should deploy to.

      - name: Add Storybook link to pull request
        uses: actions/github-script@v5
        if: github.event.action == 'opened'
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          script: |
            // Get list of folders
            const updatedStorybooks = require('fs').readdirSync('./')
              .filter((file) => require('fs').statSync(file).isDirectory());

            // Create link list
            const links = '<ul>' + updatedStorybooks
              .reduce((initial, storybook) => (initial + `<li><a target="_blank" href="https://sebgroup.github.io/green/${{ steps.pr_number.outputs.result }}/${storybook}/">${storybook}</a></li>`),'') + '</ul>';

            // Create comment body
            const body = `👋 Thanks for creating a pull request! 🚀 Checkout the ${updatedStorybooks.length > 1 ? 'storybooks' : 'storybook'} we've created for it: ${links}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
